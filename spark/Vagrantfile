IMAGE_NAME = "schnell18/buster64"
NODES = 1


Vagrant.configure("2") do |config|
    config.ssh.insert_key = false
    config.vm.box_check_update = false
    config.vm.synced_folder ".", "/work", automount: true

    # take care of /etc/hosts in both host and guest
    config.hostmanager.enabled = true
    config.hostmanager.manage_host = true
    config.hostmanager.manage_guest = true

    config.vm.define "primary" do |primary|
        primary.vm.box = IMAGE_NAME
        primary.vm.box_version = "10.6"
        primary.vm.network "private_network", ip: "192.168.60.10"
        primary.vm.hostname = "primary"
        primary.vm.provision :hostmanager
        primary.hostmanager.aliases = %w(primary.spark.vn)

        primary.vm.provider "virtualbox" do |v|
            v.name = "primary"
            v.memory = 2048
            v.cpus = 4
            v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
        end

    end


    (1..NODES).each do |i|
        node_id = "worker-#{i}"
        config.vm.define node_id do |worker|
            worker.vm.box = IMAGE_NAME
            worker.vm.box_version = "10.6"
            worker.vm.network "private_network", ip: "192.168.60.#{i + 10}"
            worker.vm.hostname = node_id
            worker.vm.provision :hostmanager
            worker.hostmanager.aliases = "#{node_id}.spark.vn"

            worker.vm.provider "virtualbox" do |v|
                # vm name must be assigned w/ node id
                # otherwise, extra disks won't be created
                v.name = node_id
                v.memory = 2048
                v.cpus = 4
                v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]

            end
        end
    end

    config.vm.provision "ansible" do |ansible|
        ansible.playbook = "provision/playbook.yml"
        ansible.inventory_path = "provision/hosts"
        ansible.limit = "all"
    end
end

# vim:set nu ai expandtab sw=4 ts=4 syntax=ruby:
