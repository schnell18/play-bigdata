WORKERS = 1

nodes = ['primary']
workers = []
(1..WORKERS).each do |i|
    workers.push("worker-#{i}")
end
nodes.push(*workers)

Vagrant.configure("2") do |config|
    config.ssh.insert_key = false
    config.vm.box = "schnell18/buster64"
    config.vm.box_version = "10.6"
    config.vm.box_check_update = false
    config.vm.synced_folder ".", "/work", automount: true

    # take care of /etc/hosts in both host and guest
    config.hostmanager.enabled = true
    config.hostmanager.manage_host = true
    config.hostmanager.manage_guest = true

    nodes.each_with_index do |node_id, i|
        config.vm.define node_id do |worker|
            worker.vm.network "private_network", ip: "192.168.60.#{i + 10}"
            worker.vm.hostname = node_id
            worker.vm.provision :hostmanager
            worker.hostmanager.aliases = "#{node_id}.spark.vn"

            worker.vm.provider "virtualbox" do |v|
                # vm name must be assigned w/ node id
                # otherwise, extra disks won't be created
                v.name = node_id
                v.memory = 2048
                v.cpus = 4
                v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]

            end
            if i == nodes.length() - 1
                worker.vm.provision "ansible" do |ansible|
                    ansible.playbook = "provision/playbook.yml"
                    # ansible.inventory_path = "provision/hosts"
                    ansible.limit = "all"
                    ansible.groups = {
                        "master" => ["primary"],
                        "worker" => workers,
                        "all:vars" => {
                            "ansible_ssh_user" => "devel",
                            "ansible_python_interpreter" => "/usr/bin/python3"
                        }
                    }
                end
            end
        end
    end

end

# vim:set nu ai expandtab sw=4 ts=4 syntax=ruby:
